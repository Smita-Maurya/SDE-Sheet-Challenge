class Solution{
    public:
    void printsolution(int **solution , int n){
        for(int i=0; i<n ; i++){
            for(int j=0 ; j<n ; j++){
                cout<<solution[i][j]<<" ";
            }
        }
        cout<<endl;
    }
    void helper(vector<vector<int>> &m , int n , int ** solution , int x , int y){
        if(x==n-1 && y==n-1){
            solution[x][y]==1;
            printsolution(solution , n);
            return;
        }
        if(x>=n || x<0 || y>=n || x<0 || m[x][y]==0 || solution[x][y]==1){
            return;
        }
        solution[x][y]=1;
        helper(m , n , x+1,y);
        helper(m , n , x-1 , y);
        helper(m , n , x , y+1);
        helper(m , n , x , y-1);
        solution[x][y]=0;
        
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
         int **solution = new int*[n];
         for(int i=0; i<n ; i++){
             solution[i]=new int*[n];
         }
         helper(m , n ,0 , 0);
    }
};
