class Solution {
public:
    ListNode*reverse(ListNode*head){
        ListNode*prev=NULL;
        ListNode*curr= head;
        ListNode*next;
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
    bool isPalindrome(ListNode* head) {
        if(head==NULL){
            return true;
        }
        if(head->next==NULL){
            return true;
        }
        ListNode*slow=head;
        ListNode*fast= head->next;
        while(fast!=NULL &&fast->next!=NULL){
            slow=slow->next;
            fast= fast->next->next;
        }
        ListNode*newnode=reverse(slow->next);
        ListNode*temp=newnode;
        ListNode*temp1=head;
        bool ans= true;
        while(temp!=NULL && temp1!=NULL){
            if(temp->val!=temp1->val){
                ans=false;
            }
            temp=temp->next;
            temp1= temp1->next;
        }
        return ans;
        
    }
};
