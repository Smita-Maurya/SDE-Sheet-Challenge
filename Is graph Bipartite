class Solution {
public:
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<int>color(n ,-1);
        for(int i=0; i<n ; i++){
            if(bfs(0 , i , color , graph)==false){
                return false;
            }
        }
        return true;
    }
    bool bfs(int a , int b , vector<int>&color , vector<vector<int>>&graph){
        queue<int>q;
        q.push(b);
        while(!q.empty()){
            int frt=q.front();
            q.pop();
            for(auto x:graph[frt]){
                if(color[x]==-1){
                    color[x]=!color[frt];
                    q.push(x);
                }
                else if(color[x]==color[frt]){
                    return false;
                }
            }
        
        }
        return true;
    }
};
